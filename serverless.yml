service: resize-image # Service Name
plugins:
  - serverless-plugin-typescript
  - serverless-prune-plugin
  # - serverless-apigw-binary
# frameworkVersion: ">=1.1.0 <2.0.0"
custom:
  prune:
    automatic: true
    number: 5
  apigwBinary:
    types:
      - 'application/json'
      - 'image/jpeg'
      - 'text/html'
provider:
  name: aws
  runtime: nodejs12.x
  region: ${opt:region, 'us-east-1'}
  timeout: 10
  # environment:
    # DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:*"
      Resource: "*"
functions:
  # viewerRequestAtEdge:
  #   name: ${self:service}-viewerRequestAtEdge-${opt:stage, self:provider.stage}-lambda
  #   handler: src/functions/viewerRequestAtEdge.handler
  #   events:
  #     - cloudFront:
  #         eventType: viewer-request
  #         origin: s3://opensls-image-${opt:stage, self:provider.stage}.s3.amazonaws.com/images
  #   package:
  #     include:
  #       - src/functions/viewerRequestAtEdge.js
  #     exclude:
  #       - node_modules/sharp/**
  #       - src/**
  originResponseAtEdge:
    name: ${self:service}-originResponseAtEdge-${opt:stage, self:provider.stage}-lambda
    handler: src/functions/originResponseAtEdge.handler
    timeout: 10
    events:
      - cloudFront:
          eventType: origin-response
          origin: s3://opensls-image-${opt:stage, self:provider.stage}.s3.amazonaws.com/images
    package:
      include:
        - src/functions/originResponseAtEdge.js
      exclude:
        - src/**
resources:
  Resources:
    CloudFrontDistribution:
      Type: 'AWS::CloudFront::Distribution'
      Properties:
        DistributionConfig:
          DefaultCacheBehavior:
            ViewerProtocolPolicy: 'redirect-to-https'
            Compress: true
            ForwardedValues:
              QueryString: true
              QueryStringCacheKeys:
                - s
                - t
                - q
                - f
          Enabled: true
          PriceClass: 'PriceClass_All'
          HttpVersion: 'http2'
package: # Optional deployment packaging configuration
  excludeDevDependencies: true
  individually: true
